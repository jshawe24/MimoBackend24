// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MimoBackend_Oct24.API.Data;

#nullable disable

namespace MimoBackend_Oct24.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0-rc.2.24474.1");

            modelBuilder.Entity("MimoBackend_Oct24.API.Models.Achievement", b =>
                {
                    b.Property<int>("AchievementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Target")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AchievementId");

                    b.ToTable("Achievements");

                    b.HasData(
                        new
                        {
                            AchievementId = 1,
                            Target = 5,
                            Title = "Complete 5 Lessons"
                        },
                        new
                        {
                            AchievementId = 2,
                            Target = 25,
                            Title = "Complete 25 Lessons"
                        },
                        new
                        {
                            AchievementId = 3,
                            Target = 50,
                            Title = "Complete 50 Lessons"
                        },
                        new
                        {
                            AchievementId = 4,
                            Target = 1,
                            Title = "Complete 1 Chapter"
                        },
                        new
                        {
                            AchievementId = 5,
                            Target = 5,
                            Title = "Complete 5 Chapters"
                        },
                        new
                        {
                            AchievementId = 6,
                            Target = 1,
                            Title = "Complete Swift Course"
                        },
                        new
                        {
                            AchievementId = 7,
                            Target = 1,
                            Title = "Complete Javascript Course"
                        },
                        new
                        {
                            AchievementId = 8,
                            Target = 1,
                            Title = "Complete C# Course"
                        });
                });

            modelBuilder.Entity("MimoBackend_Oct24.API.Models.Chapter", b =>
                {
                    b.Property<int>("ChapterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ChapterId");

                    b.HasIndex("CourseId");

                    b.ToTable("Chapters");

                    b.HasData(
                        new
                        {
                            ChapterId = 1,
                            CourseId = 1,
                            SortOrder = 0,
                            Title = "Swift Basics"
                        },
                        new
                        {
                            ChapterId = 2,
                            CourseId = 1,
                            SortOrder = 0,
                            Title = "Swift Advanced"
                        },
                        new
                        {
                            ChapterId = 3,
                            CourseId = 2,
                            SortOrder = 0,
                            Title = "Javascript Basics"
                        },
                        new
                        {
                            ChapterId = 4,
                            CourseId = 2,
                            SortOrder = 0,
                            Title = "Javascript Advanced"
                        },
                        new
                        {
                            ChapterId = 5,
                            CourseId = 3,
                            SortOrder = 0,
                            Title = "C# Basics"
                        },
                        new
                        {
                            ChapterId = 6,
                            CourseId = 3,
                            SortOrder = 0,
                            Title = "C# Advanced"
                        });
                });

            modelBuilder.Entity("MimoBackend_Oct24.API.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            Title = "Swift"
                        },
                        new
                        {
                            CourseId = 2,
                            Title = "Javascript"
                        },
                        new
                        {
                            CourseId = 3,
                            Title = "C#"
                        });
                });

            modelBuilder.Entity("MimoBackend_Oct24.API.Models.Lesson", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChapterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LessonId");

                    b.HasIndex("ChapterId");

                    b.ToTable("Lessons");

                    b.HasData(
                        new
                        {
                            LessonId = 1,
                            ChapterId = 1,
                            SortOrder = 0,
                            Title = "Swift Basics Lesson 1"
                        },
                        new
                        {
                            LessonId = 2,
                            ChapterId = 1,
                            SortOrder = 0,
                            Title = "Swift Basics Lesson 2"
                        },
                        new
                        {
                            LessonId = 3,
                            ChapterId = 2,
                            SortOrder = 0,
                            Title = "Swift Advanced Lesson 1"
                        },
                        new
                        {
                            LessonId = 4,
                            ChapterId = 2,
                            SortOrder = 0,
                            Title = "Swift Advanced Lesson 2"
                        },
                        new
                        {
                            LessonId = 5,
                            ChapterId = 3,
                            SortOrder = 0,
                            Title = "Javascript Basics Lesson 1"
                        },
                        new
                        {
                            LessonId = 6,
                            ChapterId = 3,
                            SortOrder = 0,
                            Title = "Javascript Basics Lesson 2"
                        },
                        new
                        {
                            LessonId = 7,
                            ChapterId = 4,
                            SortOrder = 0,
                            Title = "Javascript Advanced Lesson 1"
                        },
                        new
                        {
                            LessonId = 8,
                            ChapterId = 4,
                            SortOrder = 0,
                            Title = "Javascript Advanced Lesson 2"
                        },
                        new
                        {
                            LessonId = 9,
                            ChapterId = 5,
                            SortOrder = 0,
                            Title = "C# Basics Lesson 1"
                        },
                        new
                        {
                            LessonId = 10,
                            ChapterId = 5,
                            SortOrder = 0,
                            Title = "C# Basics Lesson 2"
                        },
                        new
                        {
                            LessonId = 11,
                            ChapterId = 6,
                            SortOrder = 0,
                            Title = "C# Advanced Lesson 1"
                        },
                        new
                        {
                            LessonId = 12,
                            ChapterId = 6,
                            SortOrder = 0,
                            Title = "C# Advanced Lesson 2"
                        });
                });

            modelBuilder.Entity("MimoBackend_Oct24.API.Models.LessonProgress", b =>
                {
                    b.Property<int>("LessonProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChapterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("LessonId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LessonProgressId");

                    b.HasIndex("ChapterId");

                    b.HasIndex("CourseId");

                    b.HasIndex("LessonId");

                    b.HasIndex("UserId");

                    b.ToTable("LessonProgresses");
                });

            modelBuilder.Entity("MimoBackend_Oct24.API.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            UserName = "John"
                        },
                        new
                        {
                            UserId = 2,
                            UserName = "Paul"
                        },
                        new
                        {
                            UserId = 3,
                            UserName = "Jane"
                        },
                        new
                        {
                            UserId = 4,
                            UserName = "Sarah"
                        });
                });

            modelBuilder.Entity("MimoBackend_Oct24.API.Models.UserAchievement", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AchievementId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Progress")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserAchievementId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "AchievementId");

                    b.HasIndex("AchievementId");

                    b.ToTable("UserAchievements");
                });

            modelBuilder.Entity("MimoBackend_Oct24.API.Models.Chapter", b =>
                {
                    b.HasOne("MimoBackend_Oct24.API.Models.Course", "Course")
                        .WithMany("Chapters")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("MimoBackend_Oct24.API.Models.Lesson", b =>
                {
                    b.HasOne("MimoBackend_Oct24.API.Models.Chapter", "Chapter")
                        .WithMany("Lessons")
                        .HasForeignKey("ChapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chapter");
                });

            modelBuilder.Entity("MimoBackend_Oct24.API.Models.LessonProgress", b =>
                {
                    b.HasOne("MimoBackend_Oct24.API.Models.Chapter", "Chapter")
                        .WithMany()
                        .HasForeignKey("ChapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MimoBackend_Oct24.API.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MimoBackend_Oct24.API.Models.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MimoBackend_Oct24.API.Models.User", "User")
                        .WithMany("LessonProgresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chapter");

                    b.Navigation("Course");

                    b.Navigation("Lesson");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MimoBackend_Oct24.API.Models.UserAchievement", b =>
                {
                    b.HasOne("MimoBackend_Oct24.API.Models.Achievement", "Achievement")
                        .WithMany("UserAchievements")
                        .HasForeignKey("AchievementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MimoBackend_Oct24.API.Models.User", "User")
                        .WithMany("UserAchievements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achievement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MimoBackend_Oct24.API.Models.Achievement", b =>
                {
                    b.Navigation("UserAchievements");
                });

            modelBuilder.Entity("MimoBackend_Oct24.API.Models.Chapter", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("MimoBackend_Oct24.API.Models.Course", b =>
                {
                    b.Navigation("Chapters");
                });

            modelBuilder.Entity("MimoBackend_Oct24.API.Models.User", b =>
                {
                    b.Navigation("LessonProgresses");

                    b.Navigation("UserAchievements");
                });
#pragma warning restore 612, 618
        }
    }
}
